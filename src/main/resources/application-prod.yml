
server:
  port: 9998
  tomcat:
    uri-encoding: UTF-8
  servlet:
    context-path: /devtools

spring:

  application:
    name: devtools

  # ==========  http    ===========
  http:
    encoding:
      force: true
      charset: utf-8
      enabled: true


  # ==========  data jpa    ===========
  jpa:
    # 数据库类型
    database: mysql

    #ddl-auto 几种属性
      #create：      每次运行程序时，都会重新创建表，故而数据会丢失
      #create-drop： 每次运行程序时会先创建表结构，然后待程序结束时清空表
      #upadte：      每次运行程序，没有表时会创建表，如果对象发生改变会更新表结构，原有数据不会清空，只会更新（推荐使用）
      #validate：    运行程序会校验数据与数据库的字段类型是否相同，字段不同会报错
    hibernate:
      ddl-auto: update

    # 输出日志
    show-sql: true

    #避免 no Session 的错误
    open-in-view: false

  # ==========  配置数据库+druid    ===========
  datasource:
    druid:
      #连接数据库的url，不同数据库不一样
      #zeroDateTimeBehavior=convertToNull对时间类型的字段如果是0000-0000-0000的设置为null
      url: jdbc:mysql://192.168.10.221:3306/devtools?characterEncoding=UTF-8&useSSL=true&zeroDateTimeBehavior=convertToNull
      #连接数据库的用户名
      username: root
      #连接数据库的密码。
      password: root
      #这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName
      driver-class-name: com.mysql.jdbc.Driver

      #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 1
      #最大连接池数量
      max-active: 20
      #最大连接池数量
      min-idle: 1
      #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
      max-wait: 10000
      #是否缓存preparedStatement，也就是PSCache。
      #PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-open-prepared-statements: 20
      #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
      validation-query: SELECT 1 FROM DUAL
      validation-query-timeout: 5000
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false
      #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #有两个含义：
      #1) Destroy线程会检测连接的间隔时间
      #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 60000
      #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
      #监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
      filters: stat,wall #filters: #配置多个英文逗号分隔(统计，sql注入，log4j过滤)
    type: com.alibaba.druid.pool.DruidDataSource

  # ==========  cache    ===========
  cache:
    #使用redis作为缓存
    type: redis


  # ==========  redis    ===========
  redis:
    # Redis服务器地址 （默认为127.0.0.1）
    host: 127.0.0.1

    # Redis服务器连接端口 （默认为6379）
    port: 6379

    # Redis服务器连接密码（默认为空）
    #    password: 123456

    # 连接超时时间（毫秒）
    timeout: 2000ms


